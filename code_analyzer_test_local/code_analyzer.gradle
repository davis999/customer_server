apply plugin: 'checkstyle'
apply plugin: 'pmd'
apply plugin: 'findbugs'

// apply all configurations
apply from:'code_analyzer_test/code_analyzer_config.gradle'

ext {
    application_java = 'io/reactivesw/Application.java'

    common_exception = 'io/reactivesw/common/**'

    model_exception = 'io/reactivesw/**/models/**'

    //TODO
    authentication = 'io/reactivesw/customer/server/authorization/*'

    //customer entity
    customer_entity_folder = 'io/reactivesw/customer/server/customer/entities/'
    customer_entity_folder_all = customer_entity_folder + '*'

    customer_model_folder = 'io/reactivesw/customer/server/customer/models/'
    customer_model_folder_all = customer_model_folder + '*'

    customer_repositories_folder = 'io/reactivesw/customer/server/customer/repositories/'
    customer_repositories_folder_all = customer_repositories_folder + '*'
}

/*************checkstyle(use google java style)***************/
checkstyle{
    //exclude the package you do not want to check
    checkstyleMain.exclude common_exception
    checkstyleMain.exclude authentication
    checkstyleMain.exclude customer_entity_folder_all
    checkstyleMain.exclude customer_model_folder_all
    checkstyleMain.exclude customer_repositories_folder_all
    checkstyleMain.exclude model_exception
}

/*************PMD(Project Manager Design)***************/
tasks.withType(Pmd) {
    //exclude the package you do not want to check
    exclude application_java
    exclude common_exception
    exclude authentication
    exclude customer_entity_folder_all
    exclude customer_model_folder_all
    exclude customer_repositories_folder_all
    exclude model_exception
}

/*************find bug***************/
tasks.withType(FindBugs) {
    //exclude the package you do not want to check
    // findBugs doesn't work if the filter is empty. Comment all if nothing to exclude
    classes = classes.filter {
        !it.path.contains(common_exception)
    }
    classes = classes.filter {
        !it.path.contains(authentication)
    }
    classes = classes.filter {
        !it.path.contains(customer_entity_folder)
    }
    classes = classes.filter {
        !it.path.contains(customer_model_folder)
    }
    classes = classes.filter {
        !it.path.contains(customer_repositories_folder)
    }
}